#!/usr/bin/env ruby

require "bundler/setup"
require "gcs"

require 'digest/sha1'

debug = ARGV.delete "resume"

unless ARGV.size.between?(3, 4)
  abort("Usage: #{$0} FPRATE INFILE OUTFILE [LINECOUNT] [resume]")
end

fp = Integer(ARGV.shift)
infile = File.new(ARGV.shift)
outfile = File.new(ARGV.shift, 'w')
n = Integer(ARGV.shift) rescue nil

if n
  gcs = GCS::LargeWriter.new(outfile, fp, n)
else
  gcs = GCS::Writer.new(outfile, fp)
end
p gcs

if debug
  # resume reading the previously created tempfiles
  gcs.instance_eval do
    loop do
      path = @tmp_path % (@tmp_files.count + 1)
      break unless File.exists? path
      @tmp_files << GCS::LargeWriter::TempFile.new(path)
    end
  end

else
  infile.each_line.with_index do |line, i|
    h = Digest::SHA1.hexdigest(line.chomp)[0,16].to_i(16)
    gcs << h

    if i % 1_000_000 == 0
      puts "#{i}..."
    end
  end
end

gcs.finish(STDOUT)
